{
  "env": {
    "es6": true,
    "node": true,
    "browser": true
  },
  "overrides": [
    // JSON linting
    {
      "files": ["*.json"],
      "plugins": ["json-schema-validator"],
      "extends": ["plugin:json-schema-validator/recommended"]
    },
    // TypeScript linting
    {
      "files": ["*.ts", "*.mts", "*.cts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "plugins": ["@typescript-eslint"],
      "settings": {
        "import/core-modules": [
          "electron/main",
          "electron/common",
          "electron/renderer"
        ]
      },
      "extends": [
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/typescript"
      ],
      "rules": {
        // ESLint cosmetic rules
        "indent": ["warn", 2, {
          "SwitchCase": 1
        }],
        "no-trailing-spaces": ["warn", {
          "skipBlankLines": true,
          "ignoreComments": true
        }],
        "quotes": ["warn", "double", {"avoidEscape": true }],
        "semi": "warn",
        "camelcase": "error",
        // ESLint built-in rules
        "valid-typeof": "error",
        "guard-for-in": "error",
        "no-await-in-loop": "error",
        "no-unmodified-loop-condition": "error",
        "eqeqeq": "error",
        "no-constant-binary-expression": "error",
        "no-eval": "error",
        "no-restricted-imports": ["error", {
          "name": "electron",
          "message": "This module does not provide the information about the process type. Please use 'electron/common', 'electron/main' or 'electron/renderer' instead."
        }],
        // TypeScript Rules
        "@typescript-eslint/consistent-type-assertions": ["error", {
          "assertionStyle": "as",
          "objectLiteralTypeAssertions": "never"
        }],
        "@typescript-eslint/no-meaningless-void-operator": ["error", {
          "checkNever": true
        }],
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        // Import rules
        "import/no-unused-modules": ["error", {
          "unusedExports": true
        }]
      }
    }
  ]
}
